{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          },
          {
            "access-token": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/transactions": {
      "post": {
        "operationId": "TransactionsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Creates a new transaction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "get": {
        "operationId": "TransactionsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/v1/transactions/{id}": {
      "get": {
        "operationId": "TransactionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "patch": {
        "operationId": "TransactionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      },
      "delete": {
        "operationId": "TransactionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/api/v1/emis": {
      "post": {
        "operationId": "EmisController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEmiDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "EMIs"
        ]
      },
      "get": {
        "operationId": "EmisController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "EMIs"
        ]
      }
    },
    "/api/v1/emis/{id}": {
      "get": {
        "operationId": "EmisController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "EMIs"
        ]
      },
      "patch": {
        "operationId": "EmisController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "EMIs"
        ]
      },
      "delete": {
        "operationId": "EmisController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "EMIs"
        ]
      }
    },
    "/api/v1/recurrings": {
      "post": {
        "operationId": "RecurringsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecurringDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Recurrings"
        ]
      },
      "get": {
        "operationId": "RecurringsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Recurrings"
        ]
      }
    },
    "/api/v1/recurrings/{id}": {
      "get": {
        "operationId": "RecurringsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Recurrings"
        ]
      },
      "patch": {
        "operationId": "RecurringsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecurringDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Recurrings"
        ]
      },
      "delete": {
        "operationId": "RecurringsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Recurrings"
        ]
      }
    },
    "/api/v1/accounts": {
      "post": {
        "operationId": "AccountsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "get": {
        "operationId": "AccountsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "operationId": "AccountsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "patch": {
        "operationId": "AccountsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      },
      "delete": {
        "operationId": "AccountsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Accounts"
        ]
      }
    },
    "/api/v1/cards": {
      "post": {
        "operationId": "CardsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Create a new card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCardDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Card created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Something went wrong while creating the card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Cards"
        ]
      }
    },
    "/api/v1/cards/{accountId}": {
      "get": {
        "operationId": "CardsController_findAll",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the account to which the card belongs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All Cards fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Something went wrong while fetching all the cards",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Cards"
        ]
      }
    },
    "/api/v1/cards/{accountId}/{id}": {
      "get": {
        "operationId": "CardsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the card to be deleted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the account to which the card belongs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Something went wrong while fetching the card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Cards"
        ]
      },
      "patch": {
        "operationId": "CardsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the card to be deleted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the account to which the card belongs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Update card details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCardDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Card updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Something went wrong while updating the card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Cards"
        ]
      },
      "delete": {
        "operationId": "CardsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the card to be deleted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "description": "Unique identifier of the account to which the card belongs",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Card deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Something went wrong while deleting the card",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Cards"
        ]
      }
    },
    "/api/v1/upis": {
      "post": {
        "operationId": "UpisController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Create your UPI.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpiDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "UPIs"
        ]
      }
    },
    "/api/v1/upis/{accountId}": {
      "get": {
        "operationId": "UpisController_findAll",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "UPIs"
        ]
      }
    },
    "/api/v1/upis/{accountId}/{id}": {
      "get": {
        "operationId": "UpisController_findOne",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "UPIs"
        ]
      },
      "patch": {
        "operationId": "UpisController_update",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUpiDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "UPIs"
        ]
      },
      "delete": {
        "operationId": "UpisController_remove",
        "parameters": [
          {
            "name": "accountId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "UPIs"
        ]
      }
    },
    "/api/v1/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Categories"
        ]
      }
    },
    "/api/v1/notifications": {
      "post": {
        "operationId": "NotificationsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "get": {
        "operationId": "NotificationsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v1/notifications/{id}": {
      "get": {
        "operationId": "NotificationsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "patch": {
        "operationId": "NotificationsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      },
      "delete": {
        "operationId": "NotificationsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Notifications"
        ]
      }
    },
    "/api/v1/files": {
      "post": {
        "operationId": "FilesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Files"
        ]
      },
      "get": {
        "operationId": "FilesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v1/files/{id}": {
      "get": {
        "operationId": "FilesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Files"
        ]
      },
      "patch": {
        "operationId": "FilesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Files"
        ]
      },
      "delete": {
        "operationId": "FilesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v1/comments": {
      "post": {
        "operationId": "CommentsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Comments"
        ]
      },
      "get": {
        "operationId": "CommentsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Comments"
        ]
      }
    },
    "/api/v1/comments/{id}": {
      "get": {
        "operationId": "CommentsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Comments"
        ]
      },
      "patch": {
        "operationId": "CommentsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Comments"
        ]
      },
      "delete": {
        "operationId": "CommentsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Comments"
        ]
      }
    },
    "/api/v1/splits": {
      "post": {
        "operationId": "SplitsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSplitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Splits"
        ]
      },
      "get": {
        "operationId": "SplitsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Splits"
        ]
      }
    },
    "/api/v1/splits/{id}": {
      "get": {
        "operationId": "SplitsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Splits"
        ]
      },
      "patch": {
        "operationId": "SplitsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSplitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Splits"
        ]
      },
      "delete": {
        "operationId": "SplitsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Splits"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "operationId": "AuthController_refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/renew": {
      "post": {
        "operationId": "AuthController_renew",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "access-token": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    }
  },
  "info": {
    "title": "Expense Manager",
    "description": "Advance expense tracking manager for normal peoples.",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "access-token": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "is_deleted": {
            "type": "boolean"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "mobile",
          "email",
          "password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CreateTransactionDto": {
        "type": "object",
        "properties": {
          "nature": {
            "type": "string",
            "description": "Nature of the transaction",
            "enum": [
              "normal",
              "emi",
              "recurring",
              "split",
              "upi",
              "credit_card",
              "cash",
              "bank_transfer",
              "other",
              "debit_card",
              "wallet",
              "cheque"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the transaction.",
            "enum": [
              "expense",
              "income"
            ]
          },
          "category_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "account_id": {
            "type": "string"
          },
          "card_id": {
            "type": "string"
          },
          "upi_id": {
            "type": "string"
          },
          "split_users": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "files": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "comments": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "transaction_date": {
            "format": "date-time",
            "type": "string",
            "description": ""
          },
          "is_paid": {
            "type": "boolean"
          }
        },
        "required": [
          "nature",
          "type",
          "category_id",
          "description",
          "amount",
          "account_id",
          "transaction_date",
          "is_paid"
        ]
      },
      "UpdateTransactionDto": {
        "type": "object",
        "properties": {
          "nature": {
            "type": "string",
            "description": "Nature of the transaction",
            "enum": [
              "normal",
              "emi",
              "recurring",
              "split",
              "upi",
              "credit_card",
              "cash",
              "bank_transfer",
              "other",
              "debit_card",
              "wallet",
              "cheque"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the transaction.",
            "enum": [
              "expense",
              "income"
            ]
          },
          "category_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "account_id": {
            "type": "string"
          },
          "card_id": {
            "type": "string"
          },
          "upi_id": {
            "type": "string"
          },
          "split_users": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "files": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "comments": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "transaction_date": {
            "format": "date-time",
            "type": "string",
            "description": ""
          },
          "is_paid": {
            "type": "boolean"
          }
        }
      },
      "CreateEmiDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateEmiDto": {
        "type": "object",
        "properties": {}
      },
      "CreateRecurringDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateRecurringDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the account.",
            "example": "Bank Account"
          },
          "description": {
            "type": "string",
            "description": "Description for the account.",
            "example": "This is my savings account."
          },
          "balance": {
            "type": "number",
            "description": "Current available balance for tracking.",
            "example": 12000
          }
        },
        "required": [
          "name",
          "description",
          "balance"
        ]
      },
      "UpdateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the account.",
            "example": "Bank Account"
          },
          "description": {
            "type": "string",
            "description": "Description for the account.",
            "example": "This is my savings account."
          },
          "balance": {
            "type": "number",
            "description": "Current available balance for tracking.",
            "example": 12000
          }
        }
      },
      "CreateCardDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Unique identifier for the card, typically a UUID",
            "enum": [
              "debit",
              "credit"
            ]
          },
          "card_name": {
            "type": "string",
            "description": "Name of the card",
            "maxLength": 30
          },
          "card_number": {
            "type": "string",
            "description": "Card number, last 4 digits",
            "maxLength": 4,
            "minLength": 4
          },
          "balance": {
            "type": "number",
            "description": "Current balance of the card, applicable for credit cards",
            "default": 0,
            "minimum": 0,
            "maximum": 1000000,
            "example": 1000
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit limit for the card, applicable for credit cards",
            "default": 0,
            "minimum": 0,
            "maximum": 1000000,
            "example": 5000
          },
          "accountId": {
            "type": "string",
            "description": "Unique identifier for the account associated with the card"
          }
        },
        "required": [
          "type",
          "card_name",
          "card_number",
          "accountId"
        ]
      },
      "UpdateCardDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Unique identifier for the card, typically a UUID",
            "enum": [
              "debit",
              "credit"
            ]
          },
          "card_name": {
            "type": "string",
            "description": "Name of the card",
            "maxLength": 30
          },
          "card_number": {
            "type": "string",
            "description": "Card number, last 4 digits",
            "maxLength": 4,
            "minLength": 4
          },
          "balance": {
            "type": "number",
            "description": "Current balance of the card, applicable for credit cards",
            "default": 0,
            "minimum": 0,
            "maximum": 1000000,
            "example": 1000
          },
          "credit_limit": {
            "type": "number",
            "description": "Credit limit for the card, applicable for credit cards",
            "default": 0,
            "minimum": 0,
            "maximum": 1000000,
            "example": 5000
          },
          "accountId": {
            "type": "string",
            "description": "Unique identifier for the account associated with the card"
          }
        }
      },
      "CreateUpiDto": {
        "type": "object",
        "properties": {
          "upi": {
            "type": "string",
            "description": "Provide you upi id.",
            "example": "myupi@xyz"
          },
          "account_id": {
            "type": "string",
            "description": "Provide you account id."
          },
          "is_delete": {
            "type": "boolean",
            "description": "True if your account is deleted or need to be deleted",
            "default": false
          }
        },
        "required": [
          "upi",
          "account_id",
          "is_delete"
        ]
      },
      "UpdateUpiDto": {
        "type": "object",
        "properties": {
          "upi": {
            "type": "string",
            "description": "Provide you upi id.",
            "example": "myupi@xyz"
          },
          "is_delete": {
            "type": "boolean",
            "description": "True if your account is deleted or need to be deleted",
            "default": false
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateNotificationDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateNotificationDto": {
        "type": "object",
        "properties": {}
      },
      "CreateFileDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateFileDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The content of the comment",
            "example": "This is a sample comment.",
            "maxLength": 1024,
            "minLength": 1,
            "nullable": false
          },
          "transactionId": {
            "type": "string",
            "description": "The ID of the transaction to which this comment belongs",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": false
          },
          "is_edited": {
            "type": "boolean",
            "description": "Indicates if the comment has been edited",
            "example": false,
            "default": false,
            "nullable": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Indicates if the comment has been deleted",
            "example": false,
            "default": false,
            "nullable": true
          }
        },
        "required": [
          "comment",
          "transactionId"
        ]
      },
      "UpdateCommentDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The content of the comment",
            "example": "This is a sample comment.",
            "maxLength": 1024,
            "minLength": 1,
            "nullable": false
          },
          "transactionId": {
            "type": "string",
            "description": "The ID of the transaction to which this comment belongs",
            "example": "123e4567-e89b-12d3-a456-426614174000",
            "nullable": false
          },
          "is_edited": {
            "type": "boolean",
            "description": "Indicates if the comment has been edited",
            "example": false,
            "default": false,
            "nullable": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Indicates if the comment has been deleted",
            "example": false,
            "default": false,
            "nullable": true
          }
        }
      },
      "CreateSplitDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateSplitDto": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Enter email or mobile number.",
            "example": "911234567890"
          },
          "password": {
            "type": "string",
            "description": "Enter password.",
            "example": "User@One#123"
          }
        },
        "required": [
          "identifier",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "Provide refresh token"
          }
        },
        "required": [
          "refreshToken"
        ]
      }
    }
  }
}